AggregateSource.Testing

MemoryEventStreamReader(Dictionary<Guid, List<object>> storage) {
  public Tuple<Int32, IEnumerable<object>> Read(Guid id) {
    List<object> events;
    if(!_storage.TryGet(id, out events)) {
      return null;
    }
    return new Tuple<Int32, IEnumerable<object>>(events.Count, events.ToArray());
  }
}

ISpecification {
  IEnumerable<SourcedEvent> Given();
  object When();
  IEnumerable<SourcedEvent> Then();
}

IExceptionSpecification {
  IEnumerable<SourcedEvent> Given();
  object When();
  object Then();
}
